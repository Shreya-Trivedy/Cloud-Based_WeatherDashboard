<section class="userform-section">
    <h1>Reset Password</h1>
    <form id="resetpw-form">
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" value="{{email}}" required />
        </div>
        <div class="form-group">
            <label for="code">Reset Code:</label>
            <input type="text" id="code" name="code" required />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W).{8,}"
                title="Password must be at least 8 characters long and contain at least 1 number, 1 special character, 1 uppercase letter, and 1 lowercase letter"
                required>
        </div>
        <div class="form-group">
            <label for="confirm-password">Confirm Password:</label>
            <input type="password" id="confirm-password" name="confirm-password" required>
            <small id="passwordError" style="color:red; display:none;">Passwords do not match</small>
        </div>
        <button type="submit">Reset Password</button>
    </form>
    <div id="message" style="display: none;"></div>
    <div id="error-message" style="color:red; display:none;"></div>
</section>

<script>
    // Form submission event listener
    document.getElementById('resetpw-form').addEventListener('submit', function (event) {
        event.preventDefault();  // Prevent default form submission

        // Call the password validation function
        if (validatePasswords()) {
            submitFormWithAjax();  // If passwords match, submit form using AJAX
        }
    });

    function validatePasswords() {
        let password = document.getElementById('password').value;
        let confirmPassword = document.getElementById('confirm-password').value;
        let passwordError = document.getElementById('passwordError');

        if (password !== confirmPassword) {
            passwordError.style.display = 'block'; // Show error message
            return false; // Reject form submission
        } else {
            passwordError.style.display = 'none'; // Hide error message
            return true; // Allow form submission
        }
    }

    function submitFormWithAjax() {
        let email = document.getElementById('email').value;
        let code = document.getElementById('code').value;
        let password = document.getElementById('password').value;

        // 构建JSON格式的请求体
        let formData = {
            email: email,
            code: code,
            password: password
        };

        // 发送JSON格式的请求体
        fetch('/reset-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'  // 设置请求头为JSON格式
            },
            body: JSON.stringify(formData)  // 将数据序列化为JSON字符串
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Please check your code or the reset process.');
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                // 在此处处理成功后的逻辑，比如显示成功消息
                messageDiv = document.getElementById('message');
                messageDiv.style.display = 'block';
                messageDiv.textContent = 'Password reset successfully! Redirecting to login...';
                setTimeout(() => {
                    window.location.href = '/login'; // 跳转到主页
                }, 2000);
            })
            .catch(error => {
                console.error('Error:', error);
                // 在页面上显示错误消息
                document.getElementById('error-message').style.display = 'block';
                document.getElementById('error-message').textContent = 'Error: ' + error.message;
            });
    }
</script>